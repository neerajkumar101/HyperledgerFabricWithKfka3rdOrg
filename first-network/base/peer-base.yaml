# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'

services:

  zookeeper:
    image: hyperledger/fabric-zookeeper:x86_64-1.1.0-preview
    ports:
        - 2181
        - 2888
        - 3888

  kafka:
    image: hyperledger/fabric-kafka:x86_64-1.1.0-preview
    environment:
        - KAFKA_LOG_RETENTION_MS=-1
        # - KAFKA_MESSAGE_MAX_BYTES=103809024
        # - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
        # 263192576 bytes = 11 MB
        - KAFKA_MESSAGE_MAX_BYTES=11534336
        - KAFKA_REPLICA_FETCH_MAX_BYTES=11534336
        - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
        - KAFKA_DEFAULT_REPLICATION_FACTOR=3
        - KAFKA_MIN_INSYNC_REPLICAS=2
    ports:
        - 9092

  peer-base:
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_byfn
      - CORE_LOGGING_LEVEL=INFO
      #- CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
